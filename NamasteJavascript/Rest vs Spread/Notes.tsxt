Rest operator
.............
As the name says takes all the rest of the values. Like combining multiple values into an array/object

Ex1: 
function myBio(firstName, lastName, ...otherInfo) { 
  console.log(otherInfo); // ["CodeSweetly", "Web Developer", "Male"]
}
myBio("Oluwatobi", "Sofela", "CodeSweetly", "Web Developer", "Male");


Ex:2
const [firstName, lastName, ...otherInfo] = [
  "Oluwatobi", "Sofela", "CodeSweetly", "Web Developer", "Male"
];
console.log(otherInfo);  // ["CodeSweetly", "Web Developer", "Male"]


Ex:3
const { firstName, lastName, ...otherInfo } = {
  firstName: "Oluwatobi",
  lastName: "Sofela", 
  companyName: "CodeSweetly",
  profession: "Web Developer",
  gender: "Male"
}
console.log(otherInfo); // {companyName: "CodeSweetly", profession: "Web Developer", gender: "Male"}




Spread operator
...............

As the names says it spreads the Object/Array/String into individual values

Ex1:
const myName = ["Sofela", "is", "my"];
const aboutMe = ["Oluwatobi", ...myName, "name."];
console.log(aboutMe); //[ "Oluwatobi", "Sofela", "is", "my", "name." ]


Ex2:
const myName = "Oluwatobi Sofela";
console.log([...myName]); //[ "O", "l", "u", "w", "a", "t", "o", "b", "i", " ", "S", "o", "f", "e", "l", "a" ]


Ex3:
const numbers = [1, 3, 5, 7];
function addNumbers(a, b, c, d) {
  return a + b + c + d;
}
console.log(addNumbers(...numbers)); //16


Ex4:
const myNames = ["Oluwatobi", "Sofela"];
const bio = { ...myNames, runs: "codesweetly.com" };
console.log(bio); //{ 0: "Oluwatobi", 1: "Sofela", runs: "codesweetly.com" }



***Ex5: Spread operator does not clone Identical properties
const myName = { firstName: "Tobi", lastName: "Sofela" };
const bio = { ...myName, firstName: "Oluwatobi", website: "codesweetly.com" };
console.log(bio); //{ firstName: "Oluwatobi", lastName: "Sofela", website: "codesweetly.com" };