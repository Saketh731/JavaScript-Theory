<img src="img_typo.jpg" alt="Girl with a jacket"  width="500" height="600">  (or)  <img src="html5.gif" alt="HTML5 Icon" style="width:128px;height:128px;">

<p style="color:red;">This is a red paragraph.</p>


lang Attribute
--------------
You should always include the lang attribute inside the <html> tag, to declare the language of the Web page

<html lang="en">
    (or)
<html lang="en-US">    //(i.e) Country codes can also be added to the language code in the lang attribute



title Attribute
---------------
<p title="I'm a tooltip">This is a paragraph.</p>


<hr> - horizontal line
<br> - line break

Summary
-------
All HTML elements can have attributes
1.The href attribute of <a> specifies the URL of the page the link goes to
2.The src attribute of <img> specifies the path to the image to be displayed
3.The width and height attributes of <img> provide size information for images
4.The alt attribute of <img> provides an alternate text for an image
5.The style attribute is used to add styles to an element, such as color, font, size, and more
6.The lang attribute of the <html> tag declares the language of the Web page
7.The title attribute defines some extra information about an element



***Headings***
--------------
 <h1> to <h6>
Search engines use the headings to index the structure and content of your web pages.
Users often skim a page by its headings, so It is important to use headings



Paragraphs
----------
Browsers automatically add some white space (a margin) before and after a paragraph.


<b> - Bold text
<strong> - Important text
<i> - Italic text
<em> - Emphasized text
<mark> - Marked text
<small> - Smaller text
<del> - Deleted text
<ins> - Inserted text
<sub> - Subscript text
<sup> - Superscript text



Comment Tags
------------
<!-- Write your comments here -->


Links
-----
<a> tag, <img> tag, button etc..

<a href="https://www.w3schools.com/" target="_blank">Visit W3Schools!</a>   //target = _self /_blank /_parent/_top


Link Bookmark
-------------
Use the id attribute (id="value") to define bookmarks in a page
Use the href attribute (href="#value") to link to the bookmark

Ex:
<h2 id="C4">Chapter 4</h2>
<a href="#C4">Jump to Chapter 4</a>



Image Map
---------
<img src="workplace.jpg" alt="Workplace" usemap="#workmap">

<map name="workmap">
  <area shape="rect" coords="34,44,270,350" alt="Computer" href="computer.htm">
  <area shape="rect" coords="290,172,333,250" alt="Phone" href="phone.htm">
  <area shape="circle" coords="337,300,44" alt="Coffee" href="coffee.htm">
</map>



Background-image
----------------
<style>
div {
  background-image: url('img_girl.jpg');
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-size: cover;
}
</style>



****Picture Element
-------------------
This is device specific

<picture>
  <source media="(min-width: 650px)" srcset="img_food.jpg">
  <source media="(min-width: 465px)" srcset="img_car.jpg">
  <img src="img_girl.jpg">
</picture>



Tables
======

Summary
-------
<table>
<tr>
<th>
<td>
    <thead>
    <tbody>
    <tfoot>
<caption>
border
border-collapse
border-spacing     (or) Directly inside <table> (BUT DEPRICATED)  -  <table border = "1" cellpadding = "5" cellspacing = "5">
padding
text-align
vertical-align
colspan
rowspan
id

Responsive Tables
-----------------
Add a container element (like <div>) with style = "overflow-x:auto" around the <table> element to make it responsive
Ex: 
<div style="overflow-x:auto;">
<table>
</table>
</div>



<table>
<tr> - row
<th> - header in a row
<td> - data in a row

	
Add a Border
------------
table, th, td {
   : 1px solid black;
}

Collapsed Borders
-----------------
table, th, td {
  border: 1px solid black;
  border-collapse: collapse;
}

Add Cell Padding
----------------
th, td {
  padding: 15px;
}

Left-align Headings
-------------------
th {
  text-align: left;
}


Add Border Spacing
------------------
table {
  border-spacing: 5px;
}


**colspan
---------
To make a cell span more than one column, use the colspan attribute:

<tr>
    <th>Name</th>
    <th colspan="2">Telephone</th>
</tr>
<tr>
    <td>Bill Gates</td>
    <td>55577854</td>
    <td>55577855</td>
</tr>

**rowspan
---------
To make a cell span more than one row, use the rowspan attribute:

<tr>
    <th rowspan="2">Telephone:</th>
    <td>55577854</td>
</tr>
<tr>
    <td>55577855</td>
</tr>


<caption> tag
-------------
To add a caption to a table, use the <caption> tag:

<table style="width:100%">
  <caption>Monthly savings</caption>
</table>

NOTE: The caption-side property specifies the placement of a table caption.
Ex: caption-side: top|bottom|initial|inherit;



****Styling even-odd rows****
-----------------------------
tr:nth-child(even) {
  background-color: #eee;
}
tr:nth-child(odd) {
 background-color: #fff;
}


NOTE:
----
The empty-cells property sets whether or not to display borders on empty cells in a table (By default - shows empty cell)
Ex: empty-cells: show|hide|initial|inherit;


The table-layout property defines the algorithm used to lay out table cells, rows, and columns.
Tip: The main benefit of table-layout: fixed; is that the table renders much faster. On large tables, users will not see 
any part of the table until the browser has rendered the whole table. So, if you use table-layout: fixed, 
users will see the top of the table while the browser loads and renders rest of the table. This gives the impression that the page loads a lot quicker!

Ex:table-layout: auto|fixed|initial|inherit;



List
====

Unordered 
---------
<ul>
  <li>Coffee</li>
  <li>Tea</li>
  <li>Milk</li>
</ul>


The CSS => list-style-type: disc/circle/square/none

Ordered
-------
<ol>
  <li>Coffee</li>
  <li>Tea</li>
  <li>Milk</li>
</ol>


Description Lists
----------------- 
The <dl> tag defines the description list, the <dt> tag defines the term (name), and the <dd> tag describes each term:

<dl>
  <dt>Coffee</dt>
  <dd>- black hot drink</dd>
  <dt>Milk</dt>
  <dd>- white cold drink</dd>
</dl>



**HTML Block and Inline Elements
================================

Block-level Elements
--------------------
A block-level element always starts on a new line and takes up the full width available (stretches out to the left and right as far as it can).

Ex:
<address><article><aside><blockquote><canvas>
<dd><div><dl><dt><fieldset><figcaption><figure>
<footer><form><h1>-<h6><header><hr><li><main><nav>
<noscript><ol><p><pre><section><table><tfoot><ul><video>

Inline Elements
---------------
An inline element does not start on a new line and it only takes up as much width as necessary.

Ex:
<a><abbr><acronym><b><bdo><big><br><button><cite>
<code><dfn><em><i><img><input><kbd><label><map>
<object><output><q><samp><script><select><small>
<span><strong><sub><sup><textarea><time><tt><var>


*****NOTE******
---------------
An inline element cannot contain a block-level element!



****Difference Between Class and ID
-----------------------------------
A class name can be used by multiple HTML elements, while an id name must only be used by one HTML element within the page




***HTML Iframes***
==================
An HTML iframe is used to display a web page within a web page.

The HTML <iframe> tag specifies an inline frame.
An inline frame is used to embed another document within the current HTML document.

Syntax:
<iframe src="url" title="description">   // It is a good practice to always include a title attribute for the <iframe>

<iframe src="demo_iframe.htm" height="200" width="300" title="Iframe Example"></iframe>
      (or)
<iframe src="demo_iframe.htm" style="height:200px;width:300px;" title="Iframe Example"></iframe>

By default, an iframe has a border around it.
To remove the border, add the style attribute and use the CSS border property: style="border:none;"

<iframe src="demo_iframe.htm" style="border:none;" title="Iframe Example"></iframe>


Iframe - Target for a Link
--------------------------
An iframe can be a target for a link

Syntax:
<iframe src="demo_iframe.htm" name="iframe_a" title="Iframe Example"></iframe>
<p><a href="https://www.w3schools.com" target="iframe_a">W3Schools.com</a></p>



Head tag
--------
Contains the meta data (data about data) which is not displayed in browser but used by search engines, browsers when loading the page

<title> - compulsory
<style>
<link>
<script>
<meta>
------
The <meta> element is typically used to specify the character set, page description, keywords, author of the document, and viewport settings.

<head>
  <meta charset="UTF-8">
  <meta name="description" content="Free Web tutorials">
  <meta name="keywords" content="HTML, CSS, JavaScript">   //Define keywords for search engine 
  <meta name="author" content="John Doe">
</head>

**<meta http-equiv="refresh" content="30">

***<meta name="viewport" content="width=device-width, initial-scale=1.0">
------------
The viewport is the user's visible area of a web page. It varies with the device - it will be smaller on a mobile phone than on a computer screen.

The width=device-width part sets the width of the page to follow the screen-width of the device (which will vary depending on the device).
The initial-scale=1.0 part sets the initial zoom level when the page is first loaded by the browser.

<base>
------
<base href="https://www.w3schools.com/" target="_blank">

Specifies the base URL and/or target for all relative URLs in a page.




 
**Layout Elements**
===================
HTML has several semantic elements that define the different parts of a web page:
Semantic elements = elements with a meaning.

<header> - Defines a header for a document or a section
<nav> - Defines a set of navigation links
<section> - Defines a section in a document
<article> - Defines an independent, self-contained content
<aside> - Defines content aside from the content (like a sidebar)
<footer> - Defines a footer for a document or a section
<details> - Defines additional details that the user can open and close on demand
<summary> - Defines a heading for the <details> element


A <header> element typically contains:
one or more heading elements (<h1> - <h6>)
logo or icon
authorship information


A <footer> element typically contains:
authorship information
copyright information
contact information
sitemap
back to top links
related documents

There are four different techniques to create multicolumn layouts. Each technique has its pros and cons:
1.CSS framework
2.CSS float property
3.CSS flexbox
4.CSS grid



Responsive Web Design
=====================
Responsive Web Design is about using HTML and CSS to automatically resize, hide, shrink, or enlarge, a website, 
to make it look good on all devices (desktops, tablets, and phones)

Setting The Viewport
--------------------
To create a responsive website, add 

<meta name="viewport" content="width=device-width, initial-scale=1.0">


Responsive Images
-----------------
If the CSS width property is set to 100%, the image will be responsive and scale up and down. Note: Here the image can be scaled up to be larger than its original size
A better solution is to use max-width property 
<img src="img_girl.jpg" style="width:100%;">

If the max-width property is set to 100%, the image will scale down if it has to, but never scale up to be larger than its original size:
<img src="img_girl.jpg" style="max-width:100%;height:auto;">


You can even use <picture> tag:

<picture>
  <source srcset="img_smallflower.jpg" media="(max-width: 600px)">
  <source srcset="img_flowers.jpg" media="(max-width: 1500px)">
  <source srcset="flowers.jpg">
  <img src="img_smallflower.jpg" alt="Flowers">
</picture>


Responsive Text Size
--------------------
The text size can be set with a "vw" unit, which means the "viewport width"
That way the text size will follow the size of the browser window

Ex: <h1 style="font-size:10vw">Hello World</h1>

NOTE: Viewport is the browser window size. 1vw = 1% of viewport width. If the viewport is 50cm wide, 1vw is 0.5cm.


Media Queries
-------------



Entity Number
-------------
Many mathematical, technical, and currency symbols, are not present on a normal keyboard.
To add such symbols to an HTML page, you can use the entity name or the entity number 
Ex:
 <p>I will display &euro;</p>   //I will display €  




Emojis in HTML
==============
Emojis are characters from the UTF-8 character set: 😄 😍 💗
Emojis look like images, or icons, but they are not.
They are letters (characters) from the UTF-8 (Unicode) character set.
UTF-8 covers almost all of the characters and symbols in the world.

NOTE: Use <meta charset="UTF-8">  //If not specified, UTF-8 is the default character set in HTML.

Many UTF-8 characters cannot be typed on a keyboard, but they can always be displayed using entity numbers
Ex: <p>&#128512;</p>

😄 is 128516
😍 is 128525
💗 is 128151

Since Emojis are characters, they can be copied, displayed, and sized just like any other character in HTML.
Ex:
<p style="font-size:48px">
&#128512; &#128516; &#128525; &#128151;
</p>  




URL
===
scheme://prefix.domain:port/path/filename

Explanation:

scheme - defines the type of Internet service (most common is http or https)   //http, https, ftp, file
prefix - defines a domain prefix (default for http is www)
domain - defines the Internet domain name (like w3schools.com)
port - defines the port number at the host (default for http is 80)
path - defines a path at the server (If omitted: the root directory of the site)
filename - defines the name of a document or resource



****URL Encoding****
====================
URLs can only be sent over the Internet using the ASCII character-set. If a URL contains characters outside the ASCII set, the URL has to be converted.
URL encoding converts non-ASCII characters into a format that can be transmitted over the Internet.
URL encoding replaces non-ASCII characters with a "%" followed by hexadecimal digits.
URLs cannot contain spaces. URL encoding normally replaces a space with a plus (+) sign, or %20.



DOUBT
=====
Can i have same ID (only one) in different pages 
Is it necessary to specify charset as UTF-8, because by default HTML charset is set to UTF-8


